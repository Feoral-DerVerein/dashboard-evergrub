
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://jiehjbbdeyngslfpgfnt.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImppZWhqYmJkZXluZ3NsZnBnZm50Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA3NDQxNzAsImV4cCI6MjA1NjMyMDE3MH0.s2152q-oy3qBMsJmVQ8-L9whBQDjebEQSo6GVYhXtlg";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Configuraci√≥n para persistencia entre aplicaciones
const supabaseOptions = {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storageKey: 'wisebite_app_auth',
  }
};

// Create a regular Supabase client
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY, 
  supabaseOptions
);

// Add RPC call for broadcasting status changes
export const broadcastOrderStatusChange = async (orderId: string, newStatus: string) => {
  // Use a more generic type that doesn't require specific type checking
  return await (supabase.rpc as any)('broadcast_order_status_change', {
    order_id: orderId,
    new_status: newStatus
  });
};

// Add RPC call for broadcasting wishlist product availability
export const broadcastWishlistProductAvailable = async (productId: number) => {
  // Use a more generic type that doesn't require specific type checking
  return await (supabase.rpc as any)('broadcast_product_available', {
    product_id: productId
  });
};

// Need to add SQL to add the column to the orders table if it doesn't exist
// This would be run in a separate lov-sql block:
// ALTER TABLE public.orders ADD COLUMN IF NOT EXISTS from_orders_page BOOLEAN DEFAULT FALSE;
